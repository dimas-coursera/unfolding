package module3;

//Java utilities libraries
import java.util.List;

//Processing library
import processing.core.PApplet;

//Unfolding libraries
import de.fhpotsdam.unfolding.UnfoldingMap;

import de.fhpotsdam.unfolding.data.Feature;
import de.fhpotsdam.unfolding.data.GeoRSSReader;
import de.fhpotsdam.unfolding.marker.Marker;

// map providers
import de.fhpotsdam.unfolding.providers.Google;
import de.fhpotsdam.unfolding.providers.MBTilesMapProvider;

import de.fhpotsdam.unfolding.utils.MapUtils;



/** EarthquakeCityMap
 * An application with an interactive map displaying earthquake data using markers and features.
 * Author: UC San Diego Intermediate Software Development MOOC team
 * @author Dimas DeJesus
 * Date: July 17, 2015-Relocated Austin,TX to San Diego, CA;
 * Re-Start coursera: 09-04-2017--Hope to End: 05/06/2019
 * */


public class MapDataGeoRSSFeed_Dimas extends PApplet 
{
		// You can ignore this.  It's to keep eclipse from generating a warning.
		private static final long serialVersionUID = 1L;

		// IF YOU ARE WORKING OFFLINE, change the value of this variable to true
		private static final boolean offline = false;
	
		// Less than this threshold is a light earthquake
		public static final float THRESHOLD_MODERATE = 5;
		
    // Less than this threshold is a minor earthquake
		public static final float THRESHOLD_LIGHT = 4;

	//** This is where to find the local tiles, for working without an Internet connection */
		public static String mbTilesString = "blankLight-1-3.mbtiles";
	
		//** This is where to find the GeoRSS file
		String rssURL = "http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/4.5_week.atom";
		
								/**             Map     Settings     */
	// The map
	UnfoldingMap map;
	
	public void setup() {
		size(800, 600, P2D);
		
		map = new UnfoldingMap(this);
	    MapUtils.createDefaultEventDispatcher(this, map);	
	}		
  
	// load map data via RSS feed
	public class GeoRSSReader {
			List <Feature> features = new GeoRSSReader(this, rssURL) {
				return null;
			}
	
			List <Marker> markers = MapUtils.createSimpleMarkers(features);
		}
	}
